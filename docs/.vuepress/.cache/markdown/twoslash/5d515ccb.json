{"code":"<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\nconst count = ref(0)\n</script>\n\n<template>\n  <p>kdsdkalllz</p>\n</template>","nodes":[{"type":"hover","text":"(alias) function ref<T>(value: T): [T] extends [Ref] ? IfAny<T, Ref<T>, T> : Ref<UnwrapRef<T>, UnwrapRef<T> | T> (+1 overload)\nimport ref","docs":"Takes an inner value and returns a reactive and mutable ref object, which\nhas a single property `.value` that points to the inner value.","tags":[["param","value - The object to wrap in the ref."],["see","{@link https://vuejs.org/api/reactivity-core.html#ref}"]],"start":34,"length":3,"target":"ref","line":1,"character":9},{"type":"hover","text":"const count: Ref<number, number>","start":58,"length":5,"target":"count","line":3,"character":6},{"type":"hover","text":"(alias) ref<number>(value: number): Ref<number, number> (+1 overload)\nimport ref","docs":"Takes an inner value and returns a reactive and mutable ref object, which\nhas a single property `.value` that points to the inner value.","tags":[["param","value - The object to wrap in the ref."],["see","{@link https://vuejs.org/api/reactivity-core.html#ref}"]],"start":66,"length":3,"target":"ref","line":3,"character":14},{"type":"hover","text":"(property) p: HTMLAttributes & ReservedProps","start":98,"length":1,"target":"p","line":7,"character":3},{"type":"hover","text":"(property) p: HTMLAttributes & ReservedProps","start":112,"length":1,"target":"p","line":7,"character":17}],"meta":{"extension":"vue","compilerOptions":{"strict":true,"module":99,"target":99,"allowJs":true,"skipDefaultLibCheck":true,"skipLibCheck":true,"moduleDetection":3,"baseUrl":"D:\\vpress-docs\\blog","paths":{},"jsx":1,"jsxImportSource":"vue","noImplicitAny":false},"handbookOptions":{"errors":[],"noErrors":false,"noErrorsCutted":true,"noErrorValidation":false,"noStaticSemanticInfo":false,"showEmit":false,"keepNotations":true},"removals":[],"flagNotations":[],"virtualFiles":[{"offset":0,"filename":"index.tsx","filepath":"D:/vpress-docs/blog/index.tsx","content":"/// <reference types=\"D:\\vpress-docs\\blog/node_modules/.vue-global-types/vue_3.5_0.d.ts\" />\n\nimport { ref } from 'vue'\n\nconst count = ref(0)\ndebugger/* PartiallyEnd: #3632/scriptSetup.vue */\n// @ts-ignore\ndeclare const { defineProps, defineSlots, defineEmits, defineExpose, defineModel, defineOptions, withDefaults, }: typeof import('vue');\nconst __VLS_ctx = {\n...{} as import('vue').ComponentPublicInstance,\n...{} as __VLS_Bindings,\n};\nlet __VLS_elements!: __VLS_IntrinsicElements;\ntype __VLS_LocalComponents = typeof __VLS_ctx;\nlet __VLS_components!: __VLS_LocalComponents & __VLS_GlobalComponents;\ntype __VLS_LocalDirectives = typeof __VLS_ctx;\nlet __VLS_directives!: __VLS_LocalDirectives & __VLS_GlobalDirectives;\ntype __VLS_Bindings = __VLS_ProxyRefs<{\n}>;\n__VLS_asFunctionalElement(__VLS_elements.p, __VLS_elements.p)({\n});\ntype __VLS_Slots = {};\ntype __VLS_InheritedAttrs = {};\ntype __VLS_TemplateRefs = {};\ntype __VLS_RootEl = \n| __VLS_NativeElements['p'];\nconst __VLS_export = (await import('vue')).defineComponent({\n});\nexport default {} as typeof __VLS_export;\n","extension":"tsx","supportLsp":true}],"positionQueries":[],"positionCompletions":[],"positionHighlights":[]},"queries":[],"completions":[],"errors":[],"highlights":[],"hovers":[{"type":"hover","text":"(alias) function ref<T>(value: T): [T] extends [Ref] ? IfAny<T, Ref<T>, T> : Ref<UnwrapRef<T>, UnwrapRef<T> | T> (+1 overload)\nimport ref","docs":"Takes an inner value and returns a reactive and mutable ref object, which\nhas a single property `.value` that points to the inner value.","tags":[["param","value - The object to wrap in the ref."],["see","{@link https://vuejs.org/api/reactivity-core.html#ref}"]],"start":34,"length":3,"target":"ref","line":1,"character":9},{"type":"hover","text":"const count: Ref<number, number>","start":58,"length":5,"target":"count","line":3,"character":6},{"type":"hover","text":"(alias) ref<number>(value: number): Ref<number, number> (+1 overload)\nimport ref","docs":"Takes an inner value and returns a reactive and mutable ref object, which\nhas a single property `.value` that points to the inner value.","tags":[["param","value - The object to wrap in the ref."],["see","{@link https://vuejs.org/api/reactivity-core.html#ref}"]],"start":66,"length":3,"target":"ref","line":3,"character":14},{"type":"hover","text":"(property) p: HTMLAttributes & ReservedProps","start":98,"length":1,"target":"p","line":7,"character":3},{"type":"hover","text":"(property) p: HTMLAttributes & ReservedProps","start":112,"length":1,"target":"p","line":7,"character":17}],"tags":[]}